{"version":3,"sources":["axios.js","components/Signin.js"],"names":["axiosInstance","axios","create","headers","accept","useStyles","makeStyles","theme","Box","margin","paper","marginTop","spacing","display","flexDirection","alignItems","maxWidth","borderRadius","transition","boxShadow","avatar","backgroundColor","palette","secondary","main","form","width","submit","Signin","classes","React","useState","open","setOpen","failed","setfailed","useForm","register","handleSubmit","errors","push","useHistory","onSubmit","data","a","dataform","JSON","stringify","post","res","datares","status","console","log","jsonData","parse","request","response","message","msg","className","name","content","p","component","variant","container","item","xs","severity","action","aria-label","color","size","onClick","fontSize","placeholder","label","fullWidth","type","inputRef","required","error","Boolean","email","helperText","password","style","justifyContent","marginBottom"],"mappings":"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","file":"static/js/25.11a18576.chunk.js","sourcesContent":["import axios from 'axios';\n\n//const baseURL = 'http://127.0.0.1:4000/';\n\nconst axiosInstance = axios.create({\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t} \n});\nexport default axiosInstance;","import React from \"react\";\nimport {\n  TextField,\n  Box,\n  Typography,\n  Grid,\n  Button,\n  Link,\n  Avatar,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport axiosInstance from \"../axios\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Helmet} from \"react-helmet\";\nconst useStyles = makeStyles((theme) => ({\n  Box: {\n    margin: \"auto\",\n  },\n  paper: {\n    marginTop: theme.spacing(10),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    maxWidth: \"500px\",\n    margin: \"auto\",\n    borderRadius: \"15px\",\n    transition: \"0.3s\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Signin() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [failed, setfailed] = React.useState(\"\");\n  const { register, handleSubmit, errors } = useForm();\n  const { push } = useHistory();\n\n  const onSubmit = async (data) => {\n    const dataform = JSON.stringify(data);\n    try {\n      const res = await axiosInstance.post(\"/api/users/signin/\", dataform);\n\n      const datares = await res.data;\n      if (res.status === 202 && datares) {\n        push(\"/\");\n      }\n    } catch (err) {\n      console.log(err);\n      const jsonData = JSON.parse(err.request.response);\n\n      if (jsonData.message[0].msg) {\n        setfailed(jsonData.message[0].msg);\n        setOpen(true);\n      } else {\n        setfailed(jsonData.message);\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Box className={classes.Box} maxWidth=\"xs\">\n      <Helmet>\n        <title>SignIn in RoomMate For Best Room Rental : RoomMate</title>\n        <meta name=\"description\" content=\"An Online Room Rental System will provide the Information\nabout Rooms/Flats/Houses which is available for Rent\" />\n    </Helmet>\n      <Box className={classes.paper} p={5}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Signin\n        </Typography>\n\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              {open && (\n                <Alert\n                  variant=\"outlined\"\n                  severity=\"warning\"\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  }\n                >\n                  {failed}\n                </Alert>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                placeholder=\"Enter Your E-mail Address\"\n                label=\"E-mail\"\n                variant=\"outlined\"\n                fullWidth\n                type=\"email\"\n                name=\"email\"\n                inputRef={register({\n                  required: \"E-mail Address is required.\",\n                })}\n                error={Boolean(errors.email)}\n                helperText={errors.email?.message}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                placeholder=\"Enter Your Password\"\n                label=\"Password\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"password\"\n                inputRef={register({\n                  required: \"Password is required.\",\n                })}\n                error={Boolean(errors.password)}\n                helperText={errors.password?.message}\n                type=\"password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Signin\n          </Button>\n        </form>\n        <Grid container style={{justifyContent:\"space-between\"}}>\n        <Grid item>\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={() => {\n                push(\"/forget-password\");\n              }}\n              color=\"secondary\"\n             style={{marginBottom:\"10px\"}}\n            >\n              Forget Password ?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={() => {\n                push(\"/signup\");\n              }}\n            >\n              You have Not Account? SignUp\n            </Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n"],"sourceRoot":""}