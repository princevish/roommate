{"version":3,"sources":["axios.js","components/Chat.js"],"names":["axiosInstance","axios","create","headers","accept","socket","useStyles","makeStyles","profile","marginTop","messageArea","height","overflowY","Chat","React","useState","msg","setMsg","getmsg","setGetmsg","online","setOnline","load","setLoad","userid","setUserid","user","setUser","room","useParams","classes","push","useHistory","valueRef","useRef","timenow","Date","toLocaleTimeString","useEffect","fetch","method","Accept","credentials","then","response","json","data","id","a","get","res","datares","console","log","io","transports","on","emit","to","filter","item","length","df","dataform","JSON","stringify","body","catch","error","disconnect","off","container","className","name","content","xs","alt","src","image","primary","component","Paper","chatSection","map","index","align","secondary","time","style","padding","variant","inputRef","label","fullWidth","color","aria-label","onClick","current","value"],"mappings":"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","file":"static/js/23.9130f144.chunk.js","sourcesContent":["import axios from 'axios';\n\n//const baseURL = 'http://127.0.0.1:4000/';\n\nconst axiosInstance = axios.create({\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t} \n});\nexport default axiosInstance;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport io from 'socket.io-client';\r\nimport { useParams,useHistory } from \"react-router-dom\";\r\nimport ReactScrollToBottom from \"react-scroll-to-bottom\";\r\nimport axiosInstance from \"../axios\";\r\nimport { TouchBallLoading } from \"react-loadingg\";\r\nimport {Helmet} from \"react-helmet\";\r\nlet socket;\r\nconst useStyles = makeStyles({\r\n  profile:{\r\n    marginTop:\"-20px\"\r\n  },\r\n  messageArea: {\r\n   height:\"55vh\",\r\n    overflowY: 'auto'\r\n  }\r\n});\r\n\r\nconst Chat = () => {\r\n  const [msg,setMsg]=React.useState([]);\r\n  const [getmsg,setGetmsg]=React.useState([]);\r\n  const [online,setOnline]=React.useState(false);\r\n  const [load,setLoad]=React.useState(true);\r\n  const [userid,setUserid]=React.useState(\"\");\r\n  const [user,setUser]=React.useState(\"\");\r\n  let { room } = useParams();\r\n  const classes = useStyles();\r\n  const { push } = useHistory();\r\n  const valueRef = React.useRef('')\r\n  const Serverurl='http://localhost:5000/';\r\n  const timenow=new Date().toLocaleTimeString();\r\n  React.useEffect(() => {\r\n   \r\n    fetch(\r\n      \"/api/auth\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"appllication/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      },\r\n      {}\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        \r\n        setUserid(data.id)\r\n        if (!data.id) {\r\n          push(\"/signup\");\r\n        }\r\n      });\r\n\r\n      const data= async()=>{\r\n        setLoad(true)\r\n        try {\r\n          const res = await axiosInstance.get(`/api/chat/${room}`);\r\n          const datares = await res.data;\r\n          setGetmsg(datares.data)\r\n          setLoad(false)\r\n        } catch (err) {\r\n          console.log(err)\r\n        }}\r\n        data()\r\n\r\n     \r\n  }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\nReact.useEffect(()=>{\r\n  socket = io(Serverurl, { transports: ['websocket'] });\r\n  socket.on(\"connect\", function () {\r\n    console.log(\"coonect\");\r\n    socket.emit('join',{to:userid})\r\n  });\r\n  socket.on(\"online\", async(data)=>{\r\n    const onlineuser=data.filter(item=>item.user===room)\r\n    if(onlineuser.length !==0){\r\n      setOnline(true)\r\n    }else{\r\n      setOnline(false)\r\n    }\r\n    \r\n  });\r\n  socket.on('recivemsg',(data)=>{\r\n    setMsg(msg=>[...msg,data]);\r\n    });\r\n\r\n if(msg.length !== 0){\r\n  let df ={data:msg[msg.length - 1]};\r\n  const dataform = JSON.stringify(df);\r\n   fetch(`/api/chat/${room}`,  {\r\n    method: \"POST\",\r\n     body:dataform,\r\n     headers: {\r\n       Accept: \"appllication/json\",\r\n      \"Content-Type\": \"application/json\",\r\n     },\r\n     credentials: \"include\",\r\n  }).then(function (response) {\r\n    return response.json();\r\n  }).catch(error => {\r\n    console.log(error)\r\n  });;\r\n }\r\n  return () => {\r\n        socket.disconnect();\r\n        socket.off();\r\n    }\r\n \r\n},[msg])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\nReact.useEffect(()=>{\r\n  const data= async()=>{\r\n  try {\r\n    const res = await axiosInstance.get(`/api/chatuser/${room}`);\r\n    const datares = await res.data;\r\n    setUser(datares)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }}\r\n  data()\r\n\r\n  return () => {\r\n    console.log(\"unmount\");\r\n  };\r\n},[])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n \r\nconst sendmsg=()=>{\r\n    socket.emit('sendmsg',{to:room,msg:valueRef.current.value,time:timenow})\r\n    setMsg(msg=>[...msg,{to:room,msg:valueRef.current.value,time:timenow}]);\r\n    valueRef.current.value=\"\";\r\n }\r\n const recmsg=()=>{\r\n    return msg.map((item,index)=>{\r\n          if(item.to===room){\r\n            return ( <ListItem key={index}>\r\n                <Grid container >\r\n                    <Grid item xs={12}>\r\n                        <ListItemText  align=\"right\" primary={item.msg}></ListItemText>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ListItemText align=\"right\" secondary={item.time}></ListItemText>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItem>)\r\n          }\r\n         else{\r\n          return ( <ListItem key={index}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <ListItemText align=\"left\" primary={item.msg}></ListItemText>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <ListItemText align=\"left\" secondary={item.time}></ListItemText>\r\n                </Grid>\r\n            </Grid>\r\n        </ListItem>)}\r\n     })\r\n }\r\n const dbmsg=()=>{\r\n  return getmsg.map((item,index)=>{\r\n        if(item.to===room){\r\n          return ( <ListItem key={index}>\r\n              <Grid container >\r\n                  <Grid item xs={12}>\r\n                      <ListItemText  align=\"right\" primary={item.msg}></ListItemText>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                      <ListItemText align=\"right\" secondary={item.time}></ListItemText>\r\n                  </Grid>\r\n              </Grid>\r\n          </ListItem>)\r\n        }\r\n       else{\r\n        return ( <ListItem key={index}>\r\n          <Grid container>\r\n              <Grid item xs={12}>\r\n                  <ListItemText align=\"left\" primary={item.msg}></ListItemText>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                  <ListItemText align=\"left\" secondary={item.time}></ListItemText>\r\n              </Grid>\r\n          </Grid>\r\n      </ListItem>)}\r\n   })\r\n}\r\n\r\n  return (\r\n      <>\r\n     { load && <TouchBallLoading/>}\r\n        <Grid container className={classes.profile}>\r\n        <Helmet>\r\n        <title>{`${user.name} in RoomMate User For Best Room Rental : RoomMate`}</title>\r\n        <meta name=\"description\" content=\"An Online Room Rental System will provide the Information\r\nabout Rooms/Flats/Houses which is available for Rent\" />\r\n    </Helmet>\r\n            <Grid item xs={12} >\r\n             \r\n               <ListItem>\r\n               <ListItemIcon>\r\n               <Avatar alt={user.name} src={user.image}/>\r\n              \r\n               </ListItemIcon>\r\n              <ListItemText primary={user.name}></ListItemText>\r\n              { online && <h3>Online</h3>}\r\n              </ListItem>\r\n    \r\n            </Grid>\r\n        </Grid>\r\n        <Grid container component={Paper} className={classes.chatSection}>\r\n            \r\n            <Grid item xs={12}  >\r\n                <List >\r\n                  <ReactScrollToBottom className={classes.messageArea}>{dbmsg()} {recmsg()}</ReactScrollToBottom>\r\n                   \r\n                </List>\r\n                \r\n                \r\n            </Grid>\r\n            <Divider />\r\n            <Grid container style={{padding: '5px'}}>\r\n                    <Grid item xs={10}>\r\n                        <TextField  variant=\"outlined\" inputRef={valueRef} label=\"Type Something\" fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={2} align=\"center\">\r\n                        <Fab color=\"primary\" aria-label=\"add\" onClick={sendmsg}><SendIcon /></Fab>\r\n                    </Grid>\r\n                </Grid>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"sourceRoot":""}